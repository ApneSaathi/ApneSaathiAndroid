apply plugin: applicationPlugin
apply plugin: kotlinPlugin
apply plugin: kotlinAndroidPlugin
apply plugin: kotlinKaptPlugin

//def properties = rootProject.file("keystore.properties")
//def kProperties = new Properties()
//kProperties.load(new FileInputStream(properties))

ext {
    //def host = kProperties["api_host"]
    //def databaseName = keystoreProperties["DATABASE_NAME"]
    //def databaseVersion = keystoreProperties["DATABASE_VERSION"]
}

def devHost = DEV_HOST
def prodHost = PROD_HOST
def databaseName = DATABASE_NAME
def databaseVersion = DATABASE_VERSION

android {
    compileSdkVersion targetVersion
    buildToolsVersion buildVersion

    defaultConfig {
        applicationId appId
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode versionCode
        versionName versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //buildConfigField "String", "HOST_URL", "\"${host}\""
    }

    buildTypes {
        buildTypes.each { it.buildConfigField "String", "PROD_HOST", "\"${prodHost}\"" }
        buildTypes.each { it.buildConfigField "String", "DEV_HOST", "\"${devHost}\"" }
        buildTypes.each { it.buildConfigField "String", "DB_NAME", "\"${databaseName}\"" }
        buildTypes.each { it.buildConfigField "int", "DB_VERSION", "${databaseVersion}" }
        release {
//            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        /*debug {
            debuggable true
            minifyEnabled true
            proguardFiles
        }*/
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin Support
    implementation kotlinSupport

    // Android UI Support
    implementation constraintLayout
    implementation androidSupport.appCompat
    implementation androidSupport.ktx
    implementation androidSupport.recyclerView
    implementation androidSupport.materialDesign
    implementation androidSupport.cardView
    implementation androidSupport.paging

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    // RxJava + RxAndroid
    implementation rxJava2
    implementation rxAndroid2

    // RxBinding for UI
    implementation rxViewBinding

    // Room Database RxRoom
    implementation roomDB.runtime
    kapt roomDB.compiler

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation roomDB.ktx

    // Glide - Image Loader
    implementation glide

    // HTTP Login Interceptor
    implementation okHttpInterceptor

    // Retrofit Api Calling Architecture
    implementation retrofit.networkCall

    // JSON to Response Class converter
    implementation retrofit.gsonConverter
    implementation retrofit.rxJava
    
    implementation viewModelLifecycle
    implementation kotlinCoroutine

    implementation playServicesAuth

    implementation threetenAbp

    // RxAnimation - Handle Animations Asynchronous
    //implementation 'com.mikhaellopez:rxanimation:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}